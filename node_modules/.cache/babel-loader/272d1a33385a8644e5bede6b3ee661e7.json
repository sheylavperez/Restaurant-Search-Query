{"ast":null,"code":"var _jsxFileName = \"/Users/sheylaperez/Desktop/Restaurant-Search-Query/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Container, Dropdown, Form, Label, Pagination, Segment, Grid, Header, Button, Input, Table } from 'semantic-ui-react';\nimport React, { useEffect, useState } from 'react';\nimport { ReactDatez } from 'react-datez';\nimport moment from \"moment\";\nimport Restaurants from \"../src/Data/Restaurant.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromDate, setFromDate] = useState(\"2021-10-1\");\n  const [toDate, settoDate] = useState(\"2021-10-15\");\n  const [fromHour, setfromHour] = useState(6);\n  const [toHour, settoHour] = useState(29);\n  const [transactionDataState, setTransactionsDataState] = useState([]);\n  const [activePage, setActivePage] = useState(1);\n\n  const submit = () => {\n    const input = {\n      restaurantIds: restaurantIds,\n      fromDate: fromDate,\n      toDate: toDate,\n      fromHour: fromHour,\n      toHour: toHour,\n      metricCriteria: [{\n        \"metricCode\": \"string\",\n        \"compareType\": \"Equal\",\n        \"value\": 0\n      }]\n    };\n    postData(\"https://customsearchquerytoolapi.azurewebsites.net/Search/Query\", input).then(data => {\n      setTransactionsDataState(data);\n    });\n    console.log(transactionDataState);\n  };\n\n  const optionshours = [{\n    key: 1,\n    text: '6am',\n    value: 6\n  }, {\n    key: 2,\n    text: '7am',\n    value: 7\n  }, {\n    key: 3,\n    text: '8am',\n    value: 8\n  }, {\n    key: 4,\n    text: '9am',\n    value: 4\n  }, {\n    key: 5,\n    text: '10am',\n    value: 5\n  }, {\n    key: 6,\n    text: '11am',\n    value: 6\n  }, {\n    key: 7,\n    text: '12pm',\n    value: 7\n  }, {\n    key: 8,\n    text: '1pm',\n    value: 8\n  }, {\n    key: 9,\n    text: '2pm',\n    value: 9\n  }, {\n    key: 10,\n    text: '3pm',\n    value: 10\n  }, {\n    key: 11,\n    text: '4pm',\n    value: 11\n  }, {\n    key: 12,\n    text: '5pm',\n    value: 12\n  } //all the way to 5am \n  //6am = value 6 go over 24 \n  //do the same for the key\n  ];\n  const compareOperators = [{\n    key: 1,\n    text: '≤',\n    value: 1\n  }, {\n    key: 2,\n    text: '<',\n    value: 2\n  }, {\n    key: 3,\n    text: '=',\n    value: 3\n  }, {\n    key: 4,\n    text: '>',\n    value: 4\n  }, {\n    key: 5,\n    text: '≥',\n    value: 5\n  }];\n  const [metricDefinitions, setMetricDefinitions] = useState([]);\n  const [metricCode, setMetricCode] = useState(\"\");\n  useEffect(() => {\n    getData(\"https://customsearchquerytoolapi.azurewebsites.net/Search/MetricDefinitions\").then(data => {\n      setMetricDefinitions(data);\n    });\n  }, []); //similar with the transaction \n  //to do\n  //1. create a function to do the post request (similar to getData)\n\n  console.log(metricDefinitions);\n\n  const handlePaginationChange = pageNumber => {\n    setActivePage(pageNumber);\n    console.log(pageNumber);\n  };\n\n  const options = Restaurants.map(r => {\n    return {\n      key: r.Id,\n      value: r.Id,\n      text: r.Name\n    };\n  });\n  const metricCodeOptions = metricDefinitions.map(m => {\n    return {\n      key: m.metricCode,\n      value: m.metricCode,\n      text: m.alias\n    };\n  });\n  console.log(restaurantIds);\n  console.log(metricCode);\n  const transactionDataPaginated = [transactionDataState[0]];\n  console.log(transactionDataPaginated);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        padding: '2em 0em'\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h1\",\n            dividing: true,\n            children: \"Restaurant Search Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: () => submit(),\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Restaurant Ids\",\n            fluid: true,\n            multiple: true,\n            selection: true,\n            options: options,\n            value: restaurantIds,\n            onChange: (event, data) => {\n              setRestaurantIds(data.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReactDatez, {\n              name: \"dateInput\",\n              handleChange: value => setFromDate(moment(value).format(\"YYYY-MM-DD\")),\n              value: fromDate,\n              allowPast: true,\n              dateFormat: \"MM/DD/YYYY\",\n              placeholder: \"MM/DD/YYYY\",\n              startDate: \"2021-10-01\",\n              endDate: \"2021-10-26\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReactDatez, {\n              name: \"dateInput\",\n              handleChange: value => setFromDate(moment(value).format(\"YYYY-MM-DD\")),\n              value: fromDate,\n              allowPast: true,\n              dateFormat: \"MM/DD/YYYY\",\n              placeholder: \"MM/DD/YYYY\",\n              startDate: \"2021-10-01\",\n              endDate: \"2021-10-26\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" From Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              label: \"Hours\",\n              placeholder: \"Hours\",\n              fluid: true,\n              multiple: true,\n              selection: true,\n              options: optionshours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" To Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              label: \"Hours\",\n              placeholder: \"Hours\",\n              fluid: true,\n              multiple: true,\n              selection: true,\n              options: optionshours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Metric Code\",\n              fluid: true,\n              selection: true,\n              options: metricCodeOptions,\n              value: metricCode,\n              onChange: (event, data) => {\n                setMetricCode(data.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Compare Operators\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Compare Operators\",\n              fluid: true,\n              selection: true,\n              options: compareOperators\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Values\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"sumbit \",\n          primary: true,\n          children: \"Sumbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        celled: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Restaurant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Business Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Order number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Order time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), metricDefinitions.map(md => {\n              return /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: md.alias\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), transactionDataState.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There are no results!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Body, {\n            children: transactionDataPaginated.map(d => {\n              return /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: d.restaurantId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: \"test\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: \"test\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: \"test\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 37\n                }, this), metricDefinitions.map(m => {\n                  const metricCodeName = m.metricCode.charAt(0).toLowerCase() + m.metricCode.slice(1);\n                  console.log(metricCodeName);\n                  return /*#__PURE__*/_jsxDEV(Table.Cell, {\n                    children: formatData(d[metricCodeName], m)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 49\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(Pagination, {\n                  activePage: activePage,\n                  onPageChange: (event, data) => handlePaginationChange(data.activePage),\n                  totalPages: Math.ceil(transactionDataState.length / 20)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TCdfgQKddlrZJE+2mKy1OuXHZhc=\");\n\n_c = App;\n\nasync function getData() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const response = await fetch(url, {\n    method: \"GET\",\n    cache: \"no-cache\"\n  });\n  return response.json();\n}\n\nasync function postData() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const response = await fetch(url, {\n    method: \"POST\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return response.json();\n}\n\nfunction formatData(value, metricDefinition) {\n  let formattedValue = \"\";\n\n  switch (metricDefinition.dataType) {\n    case \"Money\":\n      formattedValue = `$${value.toFixed(metricDefinition.decimalPlace)}`;\n      break;\n\n    default:\n      formattedValue = value.toFixed(metricDefinition.decimalPlace);\n      break;\n  }\n\n  return formattedValue;\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Dropdown","Form","Label","Pagination","Segment","Grid","Header","Button","Input","Table","React","useEffect","useState","ReactDatez","moment","Restaurants","App","restaurantIds","setRestaurantIds","fromDate","setFromDate","toDate","settoDate","fromHour","setfromHour","toHour","settoHour","transactionDataState","setTransactionsDataState","activePage","setActivePage","submit","input","metricCriteria","postData","then","data","console","log","optionshours","key","text","value","compareOperators","metricDefinitions","setMetricDefinitions","metricCode","setMetricCode","getData","handlePaginationChange","pageNumber","options","map","r","Id","Name","metricCodeOptions","m","alias","transactionDataPaginated","padding","event","format","md","length","d","restaurantId","metricCodeName","charAt","toLowerCase","slice","formatData","Math","ceil","url","response","fetch","method","cache","json","headers","body","JSON","stringify","metricDefinition","formattedValue","dataType","toFixed","decimalPlace"],"sources":["/Users/sheylaperez/Desktop/Restaurant-Search-Query/src/App.js"],"sourcesContent":["import './App.css';\nimport { Container, Dropdown, Form, Label,Pagination, Segment, Grid,  Header, Button, Input, Table} from 'semantic-ui-react';\nimport React, { useEffect, useState } from 'react';\nimport { ReactDatez } from 'react-datez';\nimport moment from \"moment\";\nimport Restaurants from \"../src/Data/Restaurant.json\";\n\nfunction App() {\n    const [restaurantIds, setRestaurantIds] = useState([]);\n    const [fromDate, setFromDate] = useState(\"2021-10-1\");\n    const [toDate, settoDate] = useState(\"2021-10-15\");\n    const [fromHour,setfromHour ] = useState(6);\n    const [toHour,settoHour ] = useState(29);\n    const [transactionDataState, setTransactionsDataState] = useState([]);\n    const [activePage, setActivePage] = useState(1);\n\n    \n    const submit = () => {\n        const input = {\n            restaurantIds: restaurantIds,\n            fromDate: fromDate,\n            toDate: toDate,\n            fromHour:fromHour,\n            toHour: toHour,\n            metricCriteria: [\n              {\n                \"metricCode\": \"string\",\n                \"compareType\": \"Equal\",\n                \"value\": 0\n              }\n            ]\n          }\n    \n    postData(\"https://customsearchquerytoolapi.azurewebsites.net/Search/Query\", input)\n        .then(data => {\n        setTransactionsDataState(data);\n    });\n        console.log(transactionDataState);\n     \n    }\n\n    const optionshours = [\n      { key: 1, text: '6am', value: 6 },\n      { key: 2, text: '7am', value: 7 },\n      { key: 3, text: '8am', value: 8 },\n      { key: 4, text: '9am', value: 4 },\n      { key: 5, text: '10am', value: 5 },\n      { key: 6, text: '11am', value: 6 },\n      { key: 7, text: '12pm', value: 7 },\n      { key: 8, text: '1pm', value: 8 },\n      { key: 9, text: '2pm', value: 9 },\n      { key: 10, text: '3pm', value: 10 },\n      { key: 11, text: '4pm', value: 11 },\n      { key: 12, text: '5pm', value: 12 },\n      //all the way to 5am \n      //6am = value 6 go over 24 \n      //do the same for the key\n\n    ]\n    const compareOperators = [\n        { key: 1, text: '≤', value: 1 },\n        { key: 2, text: '<', value: 2 },\n        { key: 3, text: '=', value: 3 },\n        { key: 4, text: '>', value: 4 },\n        { key: 5, text: '≥', value: 5 },\n        \n\n      ]\n     \n   \n\n    const [metricDefinitions, setMetricDefinitions] = useState([]);\n    const [metricCode, setMetricCode] = useState(\"\");\n\n    useEffect(() => {\n        getData(\"https://customsearchquerytoolapi.azurewebsites.net/Search/MetricDefinitions\")\n            .then(data => {\n                setMetricDefinitions(data);\n            });\n    }, []);\n\n    //similar with the transaction \n    //to do\n    //1. create a function to do the post request (similar to getData)\n\n    \n\n    console.log(metricDefinitions);\n\n    const handlePaginationChange = (pageNumber) => {\n        setActivePage(pageNumber);\n        console.log(pageNumber);\n    }\n\n    const options = Restaurants.map(r => {\n        return {\n            key: r.Id,\n            value: r.Id,\n            text: r.Name\n        }\n    });\n\n    const metricCodeOptions = metricDefinitions.map(m => {\n        return {\n            key: m.metricCode,\n            value: m.metricCode,\n            text: m.alias\n        }\n    });\n\n\n      console.log(restaurantIds);\n      console.log(metricCode);\n      const transactionDataPaginated =  [transactionDataState[0]];\n\n      console.log(transactionDataPaginated);\n\n  return (\n    \n    <Container>\n      <Grid container style={{ padding: '2em 0em' }}>\n        <Grid.Row>\n          <Grid.Column>\n               <Header as='h1' dividing>\n                  Restaurant Search Query\n               </Header>\n          </Grid.Column>\n       </Grid.Row>\n    </Grid>\n\n\n        <Segment>\n            <Form onSubmit={() => submit()}>\n                <Form.Field>\n                    <Dropdown placeholder='Restaurant Ids'\n                        fluid\n                        multiple\n                        selection\n                        options={options}\n                        value={restaurantIds}\n                        onChange={(event, data) => {\n                            setRestaurantIds(data.value)\n                        }} />\n                </Form.Field>\n                <Form.Group>\n                    <Form.Field>\n                        <label>Start Date</label>\n                        <ReactDatez\n                            name=\"dateInput\"\n                            handleChange={(value) => setFromDate(moment(value).format(\"YYYY-MM-DD\"))}\n                            value={fromDate}\n                            allowPast={true}\n                            dateFormat={\"MM/DD/YYYY\"}\n                            placeholder={\"MM/DD/YYYY\"}\n                            startDate={\"2021-10-01\"}\n                            endDate={\"2021-10-26\"}\n                        />\n                    </Form.Field>\n                    <Form.Field>\n                        <label>End Date</label>\n                        <ReactDatez\n                            name=\"dateInput\"\n                            handleChange={(value) => setFromDate(moment(value).format(\"YYYY-MM-DD\"))}\n                            value={fromDate}\n                            allowPast={true}\n                            dateFormat={\"MM/DD/YYYY\"}\n                            placeholder={\"MM/DD/YYYY\"}\n                            startDate={\"2021-10-01\"}\n                            endDate={\"2021-10-26\"}\n                        />\n                    </Form.Field>\n              \n                    <Form.Field>\n                        <label> From Hours</label>\n                        <Dropdown  \n                            \n                                label='Hours'\n                                placeholder='Hours'\n                                fluid multiple selection\n                                options={optionshours} />\n\n                        </Form.Field>\n                     \n\n \n                            <Form.Field>\n                            <label> To Hours</label>\n                            <Dropdown  \n                                \n                                    label='Hours'\n                                    placeholder='Hours'\n                                    fluid multiple selection\n                                    options={optionshours} />\n\n                        </Form.Field>\n                        </Form.Group>\n\n\n\n                <Form.Group>\n                    <Form.Field>\n                     <label> Metric</label>\n                        <Dropdown placeholder='Metric Code'\n                        fluid\n                        selection\n                        options={metricCodeOptions}\n                        value={metricCode}\n                        onChange={(event, data) => {\n                            setMetricCode(data.value)\n                        }} />\n                    </Form.Field>\n                    \n                    <Form.Field>\n                    <label> Compare Operators</label>\n                        <Dropdown placeholder='Compare Operators'\n                        fluid\n                        selection\n                        options={compareOperators}\n                     />\n                    </Form.Field>\n\n                    <Form.Field>\n                    <label> Values</label>\n                    <Input placeholder='Value' />\n                       \n                    </Form.Field>\n\n                </Form.Group>\n                <Button type = \"sumbit \"  primary>Sumbit</Button>\n            </Form>\n        </Segment>\n\n        <Segment>\n        <Table celled>\n                <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>\n                                Restaurant\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Business Date\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Order number\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Order time\n                            </Table.HeaderCell>\n                            {metricDefinitions.map(md => {\n                                return (<Table.HeaderCell>\n                                    {md.alias}\n                                </Table.HeaderCell>);\n                            })}\n                        </Table.Row>\n                </Table.Header>\n                {transactionDataState.length === 0 ? <p>There are no results!</p> :\n                    <React.Fragment>\n\n                <Table.Body>\n          \n                {transactionDataPaginated.map(d => {\n                                return (<Table.Row>\n                                    <Table.Cell>\n                                        {d.restaurantId}\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        test\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        test\n                                    </Table.Cell>\n                                    <Table.Cell>\n                                        test\n                                    </Table.Cell>\n                                    {metricDefinitions.map(m => {\n                                        \n                                        const metricCodeName = m.metricCode.charAt(0).toLowerCase() + m.metricCode.slice(1);\n                                        console.log(metricCodeName);\n                                        return (<Table.Cell>\n                                                    {formatData(d[metricCodeName], m)}\n                                                </Table.Cell>);\n                                    })}\n                                </Table.Row>);\n                            })}\n                </Table.Body>\n                <Table.Footer>\n                            <Table.Row>\n                            <Table.HeaderCell colSpan='3'>\n                                <Pagination\n                                  activePage={activePage}\n                                  onPageChange={(event, data) => handlePaginationChange(data.activePage)}\n                                   totalPages={Math.ceil(transactionDataState.length / 20)}\n                                ></Pagination>\n                            </Table.HeaderCell>\n                            </Table.Row>\n                    </Table.Footer>\n                  </React.Fragment>\n                    }              \n\n            </Table>\n        </Segment>\n    </Container>\n  );\n}\n\nasync function getData(url = \"\") {\n    const response = await fetch(url, {\n        method: \"GET\",\n        cache: \"no-cache\"\n    });\n\n    return response.json();\n}\n\nasync function postData(url = \"\", data = {}) {\n    const response = await fetch(url, {\n        method: \"POST\",\n        cache: \"no-cache\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    });\n\n    return response.json();\n}\n\nfunction formatData(value, metricDefinition) {\n    let formattedValue = \"\";\n    \n    switch (metricDefinition.dataType) {\n        case \"Money\":\n            formattedValue = `$${value.toFixed(metricDefinition.decimalPlace)}`;\n            break;\n    \n        default:\n            formattedValue = value.toFixed(metricDefinition.decimalPlace);\n            break;\n    }\n\n    return formattedValue;\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}